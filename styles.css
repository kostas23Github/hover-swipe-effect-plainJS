html,
body {
    margin: 0;
    padding: 0;
    height: 100vh;
    overflow: hidden;
    /* To center items  */
    display: grid;
    place-items: center;
}

body {
    background-color: black;
}

/* since elements are positioned absolute they dont affect the size of the this.wrapper element, so i set it to the same size as the cards */
.cards-container {
    position: absolute;
    width: 40vmin;
    aspect-ratio: 5/7;
}

.cards-container[status='hidden'] {
    transform: scale(0);
}

.big-card {
    aspect-ratio: 5/7;
    width: 40vmin;
    border-radius: 1vmin;
    position: absolute;
    text-align: center;
    box-shadow: -1px -1px 10px 10px rgb(0, 0, 0, 0.5);
}
/* nth-child -> select the nth child that is an img, from the 8 images the first big-image is the 2nd child */
.big-card:nth-child(2) {
    transform: translate(-10%) rotate(-3deg);
    transition: 400ms ease-in-out;
}

.big-card:nth-child(4) {
    transform: rotate(3deg);
    transition: 400ms ease-in-out;
}

.big-card:nth-child(6) {
    transform: translate(-4%, 2%) rotate(-3deg);
    transition: 400ms ease-in-out;
}

.big-card:nth-child(8) {
    transform: translate(7%, 3%) rotate(3deg);
    transition: 400ms ease-in-out;
}

/* HOVER STATE */

.cards-container:hover .big-card:nth-child(2) {
    transform: translate(-70%, 5%) rotate(-20deg);
    transition: 400ms ease-in-out;
}

.cards-container:hover .big-card:nth-child(4) {
    transform: translate(-20%, 0%) rotate(-5deg);
    transition: 400ms ease-in-out;
}

.cards-container:hover .big-card:nth-child(6) {
    transform: translate(20%, 0%) rotate(5deg);
    transition: 400ms ease-in-out;
}

.cards-container:hover .big-card:nth-child(8) {
    transform: translate(70%, 5%) rotate(20deg);
    transition: 400ms ease-in-out;
}

.small-card {
    aspect-ratio: 5/7;
    width: 15vmin;
    border-radius: 2vmin;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0px 0px 5vmin rgb(60, 60, 60);
}

.small-card:nth-child(1) {
    transition: 800ms cubic-bezier(.24,.68,.43,.83);
}

.small-card:nth-child(3) {
    transition: 800ms cubic-bezier(.24,.68,.43,.83);
}

.small-card:nth-child(5) {
    transition: 800ms cubic-bezier(.24,.68,.43,.83);
}

.small-card:nth-child(7) {
    transition: 800ms cubic-bezier(.24,.68,.43,.83);
}

/* HOVER */

.cards-container:hover .small-card:nth-child(1) {
    transform: translate(-250%, 150%) rotate(-10deg);
    transition: 600ms cubic-bezier(.04, .48, .47, .96);
}

.cards-container:hover .small-card:nth-child(3) {
    transform: translate(-200%, -210%) rotate(10deg);
    transition: 600ms cubic-bezier(.04, .48, .47, .96);
}

.cards-container:hover .small-card:nth-child(5) {
    transform: translate(230%, -190%) rotate(-10deg);
    transition: 600ms cubic-bezier(.04, .48, .47, .96);
}

.cards-container:hover .small-card:nth-child(7) {
    transform: translate(210%, 160%) rotate(10deg);
    transition: 600ms cubic-bezier(.04, .48, .47, .96);
}

.buttons {
    color: white;
    position: absolute;
    top: 85%;
}

.dislike,
.favorite {
    border-radius: 30vmin;
    border: 0.6vmin solid;
    padding: 1vmin;
    margin: 2vmin;
}


span.material-symbols-outlined {
  font-size: 6vmin;
}

.material-symbols-outlined {
  font-variation-settings:
  'FILL' 0,
}

.favorite {
    color: steelblue;
    border-color: steelblue;
}

.favorite:hover {
    transform: scale(1.2);
    transition: 100ms ease-out;
    box-shadow: 0px 0px 20px rgb(70, 130, 180, 0.9),
        inset 0px 0px 15px rgb(70, 130, 180, 0.9);
    font-variation-settings: 
    'FILL' 1
}

.favorite:active {
    transform: scale(1);
    box-shadow: 0px 0px 15px rgb(70, 130, 180, 0.9),
        inset 0px 0px 12px rgb(70, 130, 180, 0.9);
}

.dislike:hover {
    transform: scale(1.2);
    transition: 100ms ease-out;
    box-shadow: 0px 0px 20px rgb(211, 211, 211, 0.7),
        inset 0px 0px 15px rgb(211, 211, 211, 0.7);
}

.dislike:active {
    transform: scale(1);
    box-shadow: 0px 0px 15px rgb(211, 211, 211, 0.7),
        inset 0px 0px 12px rgb(211, 211, 211, 0.7);
}
